name: Build, Test, Deploy to Azure

on:
  push:
    branches:
      - main  # Trigger the action on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Step 1: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 2: Cache Docker layers to speed up build
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/boardgame:${{ github.sha }} .

      # Step 4: Scan the Docker image with Trivy
      - name: Scan the Docker image with Trivy
        run: |
          docker pull ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/boardgame:${{ github.sha }}
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/boardgame:${{ github.sha }}

  push-to-acr:
    runs-on: ubuntu-latest
    needs: build  # Wait for the 'build' job to finish first

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Step 5: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      # Step 6: Push Docker image to Azure Container Registry
      - name: Push Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/boardgame:${{ github.sha }}

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: push-to-acr  # Wait for 'push-to-acr' to complete

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Step 7: Azure login to deploy
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 8: Deploy to Azure
      - name: Deploy to Azure
        run: |
          az aks get-credentials --name ${{ secrets.AKS_CLUSTER_NAME }} --resource-group ${{ secrets.AKS_RESOURCE_GROUP }}
          kubectl set image deployment/boardgame-deployment boardgame=${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/boardgame:${{ github.sha }}
